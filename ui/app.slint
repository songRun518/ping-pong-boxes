import { Button, StandardButton, TextEdit } from "std-widgets.slint";

export struct Vec2 {
    vx:length,
    vy:length,
}

export struct Data { 
    speed: Vec2,
    x: length,
    y: length,
    color: color,
}


export component App inherits Window {
    title: "Ping Pong Boxes";
    preferred-width: 500px;
    preferred-height: 500px;
    background: #202424;
    callback update();
    callback newse(int, length, length);
    property <bool> run: true;
    property <duration> elapsed: 1s / 60;
    in-out property <[Data]> boxes;
    in-out property <length> side_len;
    in-out property <length> win_width <=> self.width;
    in-out property <length> win_height <=> self.height;
    for abox in boxes: Rectangle {
        width: side_len;
        height: side_len;
        background: abox.color;
        x: abox.x;
        y: abox.y;
        animate x, y {
            duration: elapsed;
            easing: ease;
        }
    }
    Timer {
        interval: elapsed;
        triggered => {
            if run {
                update();
            }
        }
    }

    Button {
        text: "new";
        width: 55px;
        height: 25px;
        x: 10px;
        y: 10px;
        z: 10;
        clicked => {
            dialog.visible = true;
            run = false;
        }
    }

    dialog := Rectangle {
        width: 150px;
        height: 200px;
        z: 10;
        visible: false;
        VerticalLayout {
            spacing: 5px;
            Text {
                text: "new session";
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            number := TextEdit {
                placeholder-text: "number";
                height: 41px;
            }

            size := TextEdit {
                placeholder-text: "size";
                height: 41px;
            }

            speed := TextEdit {
                placeholder-text: "speed";
                height: 41px;
            }

            HorizontalLayout {
                StandardButton {
                    kind: cancel;
                    clicked => {
                        dialog.visible = false;
                        run = true;
                    }
                }

                StandardButton {
                    kind: apply;
                    clicked => {
                        newse(
                            number.text.to-float(),
                            size.text.to-float() * 1px, 
                            speed.text.to-float() * 1px);
                        dialog.visible = false;
                        run = true;
                    }
                }
            }
        }
    }
}
